class Cell{
    constructor(x,y, size){
        this.x = x;
        this.y = y;
        this.size = size;   
		this.marked = false;
		this.selected = false;
    }
    draw(){
		stroke(151);
		
		if(this.marked){fill(0);}
        else{fill(255);}
        
		strokeWeight(1)
        rect(this.x*this.size, this.y*this.size, this.size, this.size);
    
    }
}
function setup(){
	createCanvas(windowWidth*.8, windowHeight*.8);
	size = min(windowWidth/columns*.6,windowHeight/rows*.6);
	for(var r = 0; r < rows; r++)
		{
			var temp = [];
			for(var c = 0; c < columns; c++)
			{
				temp.push(new Cell(c,r,size));
			}
			patternCells.push(temp);
		}
	console.log(patternCells)
}
function draw(){
    for(var i = 0; i < rows; i++){
        for(var j = 0; j < columns; j++){
            patternCells[i][j].draw();
        }
    }
}



var rows = 15;
var columns = 15;
var size = 0;
var patternCells = [];
patterns = [
	"000001111100000000011000110000000110000011000001100000001100011000001100110110011011100011100001101100001000000101101100000000111101010000011111101000000000011101000000000111111000000000101110000000000101100000000000100100000",
	"000000000000000000110000011000000011000110000001111000111100000111000111000011111000111110101111000111101111111000111111011111000111110000001111100000000001111100000000000111000000000000111000000000000111000000000000000000000",
	"000000000000000000110000011000001110000011100001110000011100011011000010110000001100110000000000111100000000000011000000000000111100000000001100110000000011000011000000110000001100000100000000100000000000000000000000000000000",
	"001111111100000001100000100000001101110100000001100010100000001111110100000001000000100000001111111100000000000011101110000000011111010000001111110010000011011111110000110111111000000011100100000000000000100000000000000100000",
	"000001110000000000011011000000000111001100000001101100000000001000110000000000000011000000000000111100000000001100110000000011100010000000110110000000000100011111000000000001101100000000011000110000000010000110000000011000000",
	"000010010000000000010010010101100111111010101110111111011111110011110000100010001100000100010000001111100010011111000100010011110000100011111110000100001111110000100000011110000100000011011000100000011001100100000011000110000",
	"111000010000111111100111001111111111111111111111100111001111011100111001110011100111001110011100111001110111100111001111111100111001111111100111001111011100111001110011100111001110001100111001100000110111011000000011111110000",
	"010010101110111101010101000100111010101110100101001001000111000000000000000000000111000000000000111000110000110011001110000011111101000000000111101000000011111100110000100111100010000000111111100000000100100000000001101100000",
	"000000010000000010100101000101010101000100101001010000010010000011111110000000010000010000000010010010000000010010010000000010000010000000010000010000000010000010000000010000010000000001000010000000000110010000000000001110000",
	"000000000000000000000011100000000000111110000000001100011000000011101011100000010011100100000010011100100000011101011100000001100011000000000111110000000000011101000001010100010100000101010101010000010101010101000001010101010",
	"100001000000111001001110010011011000000011001110001010001100100001010000110001001110010011011000000011001110001110001100100001000000110001001110010011011001000011001110000000001100100001110000110001001000010011011001110011001",
	"110000110110110110010110110110000111110110110001111110110110001010110110110001010110110110001010110110110111111111111111011011010000000011011011111110011011011001011011011011001001011011011001001011011011001001011011011001001",
	"000000000111000000000000111100000000000111000000000001111000000000011111000000000111111000000011111111000000111111111000001111111110000011101111100000111000000100000110000001110000000000011111000000000011111000000000001110000",
	"001110111000000001110111011100000100111011100001110010011100101110111001000110100010001010111111111111110011111111111110000000000000000000000010000000000000111000000000001111100000000011101110000000001111100000000000111000000",
	"000000110000000000001111000000000111111110000001111111111000000111111110000011111111111100011111111111100011111111111100001111111111000000000111000000000000111000000011100111001110100011111110001011100111001110100011111110001",
	"100000000000010010000110000100001001111001000000101001010000111011001100111111111111111111111111111111111000011111100000111110000111111111100000011111110110000110111001011111101000010011111100100100010000100010000001001000000",
	"001111110000000011000010000000110110100000000001010100000000010101111111111000011100000011110010000000001011000000000001001000000000001001000000000001001000000000111001000000000100001110111111100000011100011000000001000001000",
	"000000000000000000010000000000000111000000000000101100000000000001100001000000001100011100000001110111110000001111111000000000111000000000000001000000000000001000000000000111000000000001111100000000001111100000000000111000000",
	"000000001000000000000011110000011100011111010010100011111001011100011100010001110011100100001011111100110001000111100101001000011110100001000111110010001011111111001001110011110110001000011011000001000110011000000001100111000",
	"000110000011110011111000111110111111001111110011111101111100011111101111000000011111111000000011111111110010011111111110011111111100100000000001100000000000001100000000000001110000000000011111000000000011111000000000001110000",
	"000000111100000000001100110000011000000000000100111000011101000101000010100000111111111100000111111111100100011011011000111011111111001000011111111011011000111100000010000111100110010000011000010010001100100010001111000011100",
	"000001111100000000010010010000000100010001000001100010001100010010010010010100001010100001100000111000001111111111111111100000111000001100001010100001010010010010010001100010001100000100010001000000010010010000000001111100000",
	"000000000000000000000110000000000001111000000011001111000110011100110001110011100000001110011100000001110001100000001100001110000011100001111000111100000111101111000000011111100000000111111110000001110000111000000000000000000",
	"000000000000000000000000000000000001000010000000011100111000000111100111100001111111111110001110111101110000110011001100000011111111000000001111110000000000111100000000000111100000000000111100000000000000000000000000000000000"
]

function mousePressed(){
    for(var i = 0 ; i < rows; i++){
        for(var j = 0; j < columns; j++){
            if(mouseX > patternCells[i][j].x*patternCells[i][j].size  && mouseX <= patternCells[i][j].x*patternCells[i][j].size + patternCells[i][j].size && mouseY > patternCells[i][j].y*patternCells[i][j].size&& mouseY<= patternCells[i][j].y*patternCells[i][j].size + patternCells[i][j].size){
                patternCells[i][j].marked = !patternCells[i][j].marked;
            }
        }
    }
}

function showPattern()
{
	day = (document.getElementById('date').value)-1

	textSize(this.size*.4);
	textAlign(LEFT,CENTER);
	fill(0);
	
	for(var r = 0; r < rows;r ++)
	{
		thisrow = (patterns[day]).substring(r*rows,r*rows+columns)
		newText = [];
		currVal = thisrow[0];
		currCount = 1;
		for(var i = 1; i < thisrow.length; i++){
			if(thisrow[i]==currVal){currCount++;}
			else{
				if(currVal=="0"){newText.push('-'+currCount);}
				if(currVal=="1"){newText.push("+"+currCount);}
				currVal = thisrow[i];
				currCount = 1;
			}
		}
		if(currVal=="0"){newText.push('-'+currCount);}
		if(currVal=="1"){newText.push("+"+currCount);}
		text(newText.join(','), columns*size+size/2, r*size+size/2);
	}
}
function seePattern()
{
	day = (document.getElementById('date').value)-1
	
	for(var i = 0 ; i < rows; i++){
		thisrow =(patterns[day]).substring(i*rows,i*rows+columns)
        for(var j = 0; j < columns; j++){
            if(thisrow[j]==1){
                patternCells[i][j].marked = true;
            }
			else{patternCells[i][j].marked = false;}
        }
    }
}

function reset()
{
	
	for(var i = 0 ; i < rows; i++){
        for(var j = 0; j < columns; j++){
            patternCells[i][j].marked = false;
        }
    }
}